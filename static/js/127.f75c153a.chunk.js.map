{"version":3,"file":"static/js/127.f75c153a.chunk.js","mappings":"0QAEaA,EAAgBC,EAAAA,GAAAA,IAAH,qGAObC,EAAeD,EAAAA,GAAAA,GAAH,kF,kBCHV,SAASE,IACtB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,GAEX,IAAME,EAAa,mCAAG,8GAEKC,EAAAA,EAAAA,MAFL,cAEZC,EAFY,OAGlBN,EAAeM,GAHG,kBAIXA,GAJW,gCAMlBC,QAAQC,IAAR,MANkB,yBAQlBN,GAAW,GARO,4EAAH,qDAWnBE,GACD,GAAE,KAGD,+BACE,UAACV,EAAD,YACE,yCACCO,IAAW,SAACQ,EAAA,EAAD,KACZ,SAACb,EAAD,UACGG,EAAYW,KAAI,SAAAC,GACf,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAA1B,SAAiCF,EAAKG,SAD/BH,EAAKE,GAIjB,UAKV,C,8LCxCDE,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJU,oCAOL,IAAMX,EAAiB,mCAAG,oGACRU,EAAAA,EAAAA,IAAU,wBADF,cACzBT,EADyB,yBAGxBA,EAASW,KAAKC,SAHU,2CAAH,qDAMjBC,EAAY,mCAAG,WAAMN,GAAN,uFACHE,EAAAA,EAAAA,IAAA,iBAAoBF,IADjB,cACpBP,EADoB,yBAGnBA,EAASW,MAHU,2CAAH,sDAMZG,EAAmB,mCAAG,WAAMP,GAAN,uFACVE,EAAAA,EAAAA,IAAA,iBAAoBF,EAApB,aADU,cAC3BP,EAD2B,yBAG1BA,EAASW,KAAKI,MAHY,2CAAH,sDAMnBC,EAAmB,mCAAG,WAAMT,GAAN,uFACVE,EAAAA,EAAAA,IAAA,iBAAoBF,EAApB,aADU,cAC3BP,EAD2B,yBAG1BA,EAASW,KAAKC,SAHY,2CAAH,sDAMnBK,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,EAAAA,IAAU,gBAAiB,CAChDU,OAAQ,CACND,MAAOA,KAHkB,cACvBlB,EADuB,yBAOtBA,EAASW,KAAKC,SAPQ,2CAAH,qD","sources":["pages/Home/Home.Styled.js","pages/Home/Home.js","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TrendingThumb = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const TrendingList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getTrendingMovies } from '../../utils/api';\nimport { TrendingThumb, TrendingList } from './Home.Styled';\nimport { Loader } from '../../utils/Loader';\n\nexport default function Home() {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    const getTrendMovie = async () => {\n      try {\n        const response = await getTrendingMovies();\n        setTrendMovies(response);\n        return response;\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTrendMovie();\n  }, []);\n\n  return (\n    <>\n      <TrendingThumb>\n        <h3>TRENDING NOW</h3>\n        {loading && <Loader />}\n        <TrendingList>\n          {trendMovies.map(item => {\n            return (\n              <li key={item.id}>\n                <Link to={`/movies/${item.id}`}>{item.title}</Link>\n              </li>\n            );\n          })}\n        </TrendingList>\n      </TrendingThumb>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '68f9ac02869bbba2dc968e1b369c4856';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n\n  return response.data.results;\n};\n\nexport const getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n\n  return response.data;\n};\n\nexport const getMovieCreditsByID = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsByID = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n\n  return response.data.results;\n};\n"],"names":["TrendingThumb","styled","TrendingList","Home","useState","trendMovies","setTrendMovies","loading","setLoading","useEffect","getTrendMovie","getTrendingMovies","response","console","log","Loader","map","item","to","id","title","axios","api_key","data","results","getMovieByID","getMovieCreditsByID","cast","getMovieReviewsByID","getMovieByQuery","query","params"],"sourceRoot":""}