{"version":3,"file":"static/js/217.207ce76e.chunk.js","mappings":"sRAEaA,EAAWC,EAAAA,GAAAA,GAAH,gKASRC,EAAYD,EAAAA,GAAAA,GAAH,4IAOTE,EAAYF,EAAAA,GAAAA,EAAH,8D,kBCXP,SAASG,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEMC,GAAUC,EAAAA,EAAAA,MAAYC,QAmB5B,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,oGAEpBL,GAAW,GAFS,UAGGM,EAAAA,EAAAA,IAAoBL,GAHvB,cAGdM,EAHc,OAIpBT,EAASS,GAJW,kBAMb,CAAEA,SAAAA,IANW,gCAQpBC,QAAQC,IAAR,MARoB,yBAUpBT,GAAW,GAVS,4EAAH,qDAarBK,GACD,GAAE,CAACJ,KAGF,+BACE,UAACV,EAAD,WACGQ,IAAW,SAACW,EAAA,EAAD,IACVb,EAAMc,OAGNd,EAAMe,KAAI,SAAAC,GACR,OACE,UAACpB,EAAD,YACE,gBACEqB,IACED,EAAKE,aAAL,yCACsCF,EAAKE,cACvCC,EAENC,IAAKJ,EAAKK,cACVC,MAAO,OAET,SAACzB,EAAD,UAAYmB,EAAKK,kBAVHL,EAAKO,GAaxB,KAjBD,qEAsBT,C,8LCrDDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJU,oCAOL,IAAMC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAU,wBADF,cACzBd,EADyB,yBAGxBA,EAASiB,KAAKC,SAHU,2CAAH,qDAMjBC,EAAY,mCAAG,WAAMN,GAAN,uFACHC,EAAAA,EAAAA,IAAA,iBAAoBD,IADjB,cACpBb,EADoB,yBAGnBA,EAASiB,MAHU,2CAAH,sDAMZlB,EAAmB,mCAAG,WAAMc,GAAN,uFACVC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,aADU,cAC3Bb,EAD2B,yBAG1BA,EAASiB,KAAKG,MAHY,2CAAH,sDAMnBC,EAAmB,mCAAG,WAAMR,GAAN,uFACVC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,aADU,cAC3Bb,EAD2B,yBAG1BA,EAASiB,KAAKC,SAHY,2CAAH,sDAMnBI,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,EAAAA,IAAU,gBAAiB,CAChDU,OAAQ,CACND,MAAOA,KAHkB,cACvBvB,EADuB,yBAOtBA,EAASiB,KAAKC,SAPQ,2CAAH,qD","sources":["components/Cast/Cast.Styled.js","components/Cast/Cast.js","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  padding-right: 16px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: space-around;\n  align-content: center;\n`;\n\nexport const ActorItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2);\n`;\n\nexport const ActorName = styled.p`\n  padding: 8px;\n  font-weight: 700;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCreditsByID } from '../../utils/api';\nimport placeholder from '../../images/placeholder.png';\nimport { CastList, ActorItem, ActorName } from './Cast.Styled';\nimport { Loader } from '../../utils/Loader';\n\nexport default function Cast() {\n  const [movie, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const moiveId = useParams().movieId;\n\n  useEffect(() => {\n    const getMovieCredits = async () => {\n      try {\n        setLoading(true);\n        const response = await getMovieCreditsByID(moiveId);\n        setMovie(response);\n\n        return { response };\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovieCredits();\n  }, [moiveId]);\n\n  return (\n    <>\n      <CastList>\n        {loading && <Loader />}\n        {!movie.length ? (\n          <p>We don't have any cast for this movie</p>\n        ) : (\n          movie.map(item => {\n            return (\n              <ActorItem key={item.id}>\n                <img\n                  src={\n                    item.profile_path\n                      ? `https://image.tmdb.org/t/p/w200${item.profile_path}`\n                      : placeholder\n                  }\n                  alt={item.original_name}\n                  width={150}\n                />\n                <ActorName>{item.original_name}</ActorName>\n              </ActorItem>\n            );\n          })\n        )}\n      </CastList>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '68f9ac02869bbba2dc968e1b369c4856';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n\n  return response.data.results;\n};\n\nexport const getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n\n  return response.data;\n};\n\nexport const getMovieCreditsByID = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsByID = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n\n  return response.data.results;\n};\n"],"names":["CastList","styled","ActorItem","ActorName","Cast","useState","movie","setMovie","loading","setLoading","moiveId","useParams","movieId","useEffect","getMovieCredits","getMovieCreditsByID","response","console","log","Loader","length","map","item","src","profile_path","placeholder","alt","original_name","width","id","axios","api_key","getTrendingMovies","data","results","getMovieByID","cast","getMovieReviewsByID","getMovieByQuery","query","params"],"sourceRoot":""}