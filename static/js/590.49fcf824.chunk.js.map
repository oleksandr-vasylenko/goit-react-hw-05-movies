{"version":3,"file":"static/js/590.49fcf824.chunk.js","mappings":"2QAEaA,EAAcC,EAAAA,GAAAA,GAAH,6GAQXC,EAAaD,EAAAA,GAAAA,GAAH,qJ,kBCJR,SAASE,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEMC,GAAUC,EAAAA,EAAAA,MAAYC,QAmB5B,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,oGAEpBL,GAAW,GAFS,UAGGM,EAAAA,EAAAA,IAAoBL,GAHvB,cAGdM,EAHc,OAIpBT,EAAUS,GAJU,kBAMbA,GANa,gCAQpBC,QAAQC,IAAR,MARoB,yBAUpBT,GAAW,GAVS,4EAAH,qDAarBK,GACD,GAAE,CAACJ,KAGF,+BACE,UAACT,EAAD,WACGO,IAAW,SAACW,EAAA,EAAD,IACVb,EAAOc,OAGPd,EAAOe,KAAI,SAAAC,GAAI,OACb,UAACnB,EAAD,YACE,wBAAKmB,EAAKC,UACV,uBAAID,EAAKE,YAFMF,EAAKG,GADT,KAFf,wEAYT,C,8LC1CDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJU,oCAOL,IAAMC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAU,wBADF,cACzBV,EADyB,yBAGxBA,EAASa,KAAKC,SAHU,2CAAH,qDAMjBC,EAAY,mCAAG,WAAMN,GAAN,uFACHC,EAAAA,EAAAA,IAAA,iBAAoBD,IADjB,cACpBT,EADoB,yBAGnBA,EAASa,MAHU,2CAAH,sDAMZG,EAAmB,mCAAG,WAAMP,GAAN,uFACVC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,aADU,cAC3BT,EAD2B,yBAG1BA,EAASa,KAAKI,MAHY,2CAAH,sDAMnBlB,EAAmB,mCAAG,WAAMU,GAAN,uFACVC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,aADU,cAC3BT,EAD2B,yBAG1BA,EAASa,KAAKC,SAHY,2CAAH,sDAMnBI,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,EAAAA,IAAU,gBAAiB,CAChDU,OAAQ,CACND,MAAOA,KAHkB,cACvBnB,EADuB,yBAOtBA,EAASa,KAAKC,SAPQ,2CAAH,qD","sources":["components/Reviews/Reviews.Styled.js","components/Reviews/Reviews.js","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  padding-right: 16px;\n\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n`;\n\nexport const ReviewItem = styled.li`\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviewsByID } from '../../utils/api';\nimport { ReviewsList, ReviewItem } from './Reviews.Styled';\nimport { Loader } from '../../utils/Loader';\n\nexport default function Reviews() {\n  const [review, setReview] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const moiveId = useParams().movieId;\n\n  useEffect(() => {\n    const getMovieCredits = async () => {\n      try {\n        setLoading(true);\n        const response = await getMovieReviewsByID(moiveId);\n        setReview(response);\n\n        return response;\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovieCredits();\n  }, [moiveId]);\n\n  return (\n    <>\n      <ReviewsList>\n        {loading && <Loader />}\n        {!review.length ? (\n          <p>We don't have any reviews for this movie</p>\n        ) : (\n          review.map(item => (\n            <ReviewItem key={item.id}>\n              <h4>{item.author}</h4>\n              <p>{item.content}</p>\n            </ReviewItem>\n          ))\n        )}\n      </ReviewsList>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '68f9ac02869bbba2dc968e1b369c4856';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n\n  return response.data.results;\n};\n\nexport const getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n\n  return response.data;\n};\n\nexport const getMovieCreditsByID = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsByID = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n\n  return response.data.results;\n};\n"],"names":["ReviewsList","styled","ReviewItem","Reviews","useState","review","setReview","loading","setLoading","moiveId","useParams","movieId","useEffect","getMovieCredits","getMovieReviewsByID","response","console","log","Loader","length","map","item","author","content","id","axios","api_key","getTrendingMovies","data","results","getMovieByID","getMovieCreditsByID","cast","getMovieByQuery","query","params"],"sourceRoot":""}