{"version":3,"file":"static/js/70.aaa4713e.chunk.js","mappings":"mRAEaA,EAAcC,EAAAA,GAAAA,IAAH,qGAOXC,EAAaD,EAAAA,GAAAA,KAAH,wDAKVE,EAAYF,EAAAA,GAAAA,GAAH,kF,kBCRP,SAASG,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA8BN,EAAAA,EAAAA,WAAS,GAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVV,EAAJ,CAGA,IAAMW,EAAW,mCAAG,oGAEhBJ,GAAW,GAFK,UAGaK,EAAAA,EAAAA,IAAgBZ,GAH7B,QAGVa,EAHU,SAKdV,EAAWU,GALG,uDAQhBR,EAAS,2CARO,kBASTD,GATS,yBAWhBG,GAAW,GAXK,4EAAH,qDAcP,OAAVP,GAAkBW,GAfjB,CAgBF,GAAE,CAACX,EAAOI,IASX,OACE,UAACV,EAAD,WACGY,IAAW,SAACQ,EAAA,EAAD,KACZ,UAAClB,EAAD,CAAYmB,SAVC,SAAAC,GACfA,EAAEC,iBACF,IAAMC,EAAUF,EAAEG,OAAOC,SAASC,MAAMC,MAC5B,KAAZJ,EAAiBK,MAAM,mBAAqBtB,EAASiB,GACrDF,EAAEG,OAAOC,SAASC,MAAMC,MAAQ,EACjC,EAKG,WACE,kBACEE,KAAK,QACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,mBAAQH,KAAK,SAAb,UACE,2CAGJ,SAAC5B,EAAD,UACGG,GACCE,EAAQ2B,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAM1B,GAAlC,SACGuB,KAFID,EAMZ,QAIV,C,8LClEDK,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJU,oCAOL,IAAMC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAU,wBADF,cACzBG,EADyB,yBAGxBA,EAASC,KAAKrC,SAHU,2CAAH,qDAMjBsC,EAAY,mCAAG,WAAMV,GAAN,uFACHK,EAAAA,EAAAA,IAAA,iBAAoBL,IADjB,cACpBQ,EADoB,yBAGnBA,EAASC,MAHU,2CAAH,sDAMZE,EAAmB,mCAAG,WAAMX,GAAN,uFACVK,EAAAA,EAAAA,IAAA,iBAAoBL,EAApB,aADU,cAC3BQ,EAD2B,yBAG1BA,EAASC,KAAKG,MAHY,2CAAH,sDAMnBC,EAAmB,mCAAG,WAAMb,GAAN,uFACVK,EAAAA,EAAAA,IAAA,iBAAoBL,EAApB,aADU,cAC3BQ,EAD2B,yBAG1BA,EAASC,KAAKrC,SAHY,2CAAH,sDAMnBU,EAAe,mCAAG,WAAMZ,GAAN,uFACNmC,EAAAA,EAAAA,IAAU,gBAAiB,CAChDS,OAAQ,CACN5C,MAAOA,KAHkB,cACvBsC,EADuB,yBAOtBA,EAASC,KAAKrC,SAPQ,2CAAH,qD","sources":["pages/Movies/Movies.Styled.js","pages/Movies/Movies.js","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieSearch = styled.div`\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  gap: 12px;\n`;\n\nexport const FoundList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import { useState, useEffect } from 'react';\nimport { getMovieByQuery } from '../../utils/api';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MovieSearch, SearchForm, FoundList } from './Movies.Styled';\nimport { Loader } from '../../utils/Loader';\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    const searchMovie = async () => {\n      try {\n        setLoading(true);\n        const searchedMovies = await getMovieByQuery(query);\n        if (searchedMovies) {\n          setResults(searchedMovies);\n        }\n      } catch {\n        setError('Something went wrong. Please try again.');\n        return error;\n      } finally {\n        setLoading(false);\n      }\n    };\n    query !== null && searchMovie();\n  }, [query, error]);\n\n  const onSearch = e => {\n    e.preventDefault();\n    const request = e.target.elements.input.value;\n    request === '' ? alert('Type something!') : setQuery(request);\n    e.target.elements.input.value = '';\n  };\n\n  return (\n    <MovieSearch>\n      {loading && <Loader />}\n      <SearchForm onSubmit={onSearch}>\n        <input\n          name=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </SearchForm>\n      <FoundList>\n        {query &&\n          results.map(({ id, title }) => {\n            return (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n      </FoundList>\n    </MovieSearch>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '68f9ac02869bbba2dc968e1b369c4856';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n\n  return response.data.results;\n};\n\nexport const getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n\n  return response.data;\n};\n\nexport const getMovieCreditsByID = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsByID = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n\n  return response.data.results;\n};\n"],"names":["MovieSearch","styled","SearchForm","FoundList","Movies","useState","query","setQuery","results","setResults","error","setError","loading","setLoading","location","useLocation","useEffect","searchMovie","getMovieByQuery","searchedMovies","Loader","onSubmit","e","preventDefault","request","target","elements","input","value","alert","name","type","autoComplete","autoFocus","placeholder","map","id","title","to","state","from","axios","api_key","getTrendingMovies","response","data","getMovieByID","getMovieCreditsByID","cast","getMovieReviewsByID","params"],"sourceRoot":""}