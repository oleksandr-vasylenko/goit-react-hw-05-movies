{"version":3,"file":"static/js/674.b0c2363b.chunk.js","mappings":"uRAEaA,EAAoBC,EAAAA,GAAAA,IAAH,qGAOjBC,EAAiBD,EAAAA,GAAAA,IAAH,mFAMdE,EAAiBF,EAAAA,GAAAA,IAAH,oFAOdG,EAAcH,EAAAA,GAAAA,GAAH,kF,kBCXT,SAASI,IAAgB,IAAD,IACrC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEMC,GAAUC,EAAAA,EAAAA,MAAYC,SAE5BC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,oGAEbL,GAAW,GAFE,UAGUM,EAAAA,EAAAA,IAAaL,GAHvB,cAGPM,EAHO,OAIbT,EAASS,GAJI,kBAMNA,GANM,gCAQbC,QAAQC,IAAR,MARa,yBAUbT,GAAW,GAVE,4EAAH,qDAadK,GACD,GAAE,CAACJ,IAEJ,IAAQS,EACNb,EADMa,YAAaC,EACnBd,EADmBc,MAAOC,EAC1Bf,EAD0Be,aAAcC,EACxChB,EADwCgB,SAAUC,EAClDjB,EADkDiB,aAAcC,EAChElB,EADgEkB,OAG5DC,EAASN,GAAW,yCAAsCA,GAC1DO,EAAOL,GAAgBA,EAAaM,UAAU,EAAG,GACjDC,EAAOC,KAAKC,MAAqB,GAAfP,GAClBQ,EACJP,GACAA,EACGQ,KAAI,YACH,OADiB,EAAXC,IAEP,IACAC,KAAK,MAEJC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,UAACvC,EAAD,WACGS,IAAW,SAAC+B,EAAA,EAAD,KACZ,SAAC,KAAD,CAAMC,GAAIL,EAAV,mBAEA,UAAClC,EAAD,YACE,gBAAKwC,IAAKhB,EAAQiB,IAAKtB,EAAOuB,MAAO,OACrC,0BACGvB,EADH,KACYM,EADZ,QAGA,wCAAgBE,EAAhB,QACA,4BACE,sCACA,uBAAIN,QAEN,4BACE,oCACA,uBAAIS,WAIR,UAAC7B,EAAD,YACE,oDACA,UAACC,EAAD,YACE,yBACE,SAAC,KAAD,CAAMqC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,KAAD,MAGL,C,8LCjFDI,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJU,oCAOL,IAAMC,EAAiB,mCAAG,oGACRF,EAAAA,EAAAA,IAAU,wBADF,cACzB5B,EADyB,yBAGxBA,EAAS+B,KAAKC,SAHU,2CAAH,qDAMjBjC,EAAY,mCAAG,WAAMkC,GAAN,uFACHL,EAAAA,EAAAA,IAAA,iBAAoBK,IADjB,cACpBjC,EADoB,yBAGnBA,EAAS+B,MAHU,2CAAH,sDAMZG,EAAmB,mCAAG,WAAMD,GAAN,uFACVL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aADU,cAC3BjC,EAD2B,yBAG1BA,EAAS+B,KAAKI,MAHY,2CAAH,sDAMnBC,EAAmB,mCAAG,WAAMH,GAAN,uFACVL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aADU,cAC3BjC,EAD2B,yBAG1BA,EAAS+B,KAAKC,SAHY,2CAAH,sDAMnBK,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAU,gBAAiB,CAChDW,OAAQ,CACND,MAAOA,KAHkB,cACvBtC,EADuB,yBAOtBA,EAAS+B,KAAKC,SAPQ,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.Styled.js","pages/MovieDetails/MovieDetails.js","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieDetailsThumb = styled.div`\n  padding: 16px;\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n`;\n\nexport const GeneralDetails = styled.div`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n`;\n\nexport const AdditionalInfo = styled.div`\n  gap: 8px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const AddInfoList = styled.ul`\n  display: flex;\n  gap: 4px;\n  flex-direction: column;\n`;\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieByID } from '../../utils/api';\nimport {\n  MovieDetailsThumb,\n  GeneralDetails,\n  AdditionalInfo,\n  AddInfoList,\n} from './MovieDetails.Styled';\nimport { Loader } from '../../utils/Loader';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const moiveId = useParams().movieId;\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        setLoading(true);\n        const response = await getMovieByID(moiveId);\n        setMovie(response);\n\n        return response;\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovie();\n  }, [moiveId]);\n\n  const { poster_path, title, release_date, overview, vote_average, genres } =\n    movie;\n\n  const poster = poster_path && `https://image.tmdb.org/t/p/w500${poster_path}`;\n  const yyyy = release_date && release_date.substring(0, 4);\n  const rate = Math.round(vote_average * 10);\n  const genresList =\n    genres &&\n    genres\n      .map(({ name }) => {\n        return name;\n      })\n      .join(', ');\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <MovieDetailsThumb>\n      {loading && <Loader />}\n      <Link to={backLinkHref}>BACK</Link>\n\n      <GeneralDetails>\n        <img src={poster} alt={title} width={300} />\n        <h2>\n          {title} ({yyyy})\n        </h2>\n        <p>User Score: {rate}%</p>\n        <div>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n        </div>\n        <div>\n          <h3>Genres</h3>\n          <p>{genresList}</p>\n        </div>\n      </GeneralDetails>\n\n      <AdditionalInfo>\n        <h3>Additional Information</h3>\n        <AddInfoList>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </AddInfoList>\n      </AdditionalInfo>\n      <Outlet />\n    </MovieDetailsThumb>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '68f9ac02869bbba2dc968e1b369c4856';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n\n  return response.data.results;\n};\n\nexport const getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n\n  return response.data;\n};\n\nexport const getMovieCreditsByID = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n\n  return response.data.cast;\n};\n\nexport const getMovieReviewsByID = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await axios.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n\n  return response.data.results;\n};\n"],"names":["MovieDetailsThumb","styled","GeneralDetails","AdditionalInfo","AddInfoList","MovieDetails","useState","movie","setMovie","loading","setLoading","moiveId","useParams","movieId","useEffect","getMovie","getMovieByID","response","console","log","poster_path","title","release_date","overview","vote_average","genres","poster","yyyy","substring","rate","Math","round","genresList","map","name","join","backLinkHref","useLocation","state","from","Loader","to","src","alt","width","axios","api_key","getTrendingMovies","data","results","id","getMovieCreditsByID","cast","getMovieReviewsByID","getMovieByQuery","query","params"],"sourceRoot":""}